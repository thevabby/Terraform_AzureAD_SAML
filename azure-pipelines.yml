# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

pool:
  name: Default
  vmImage: ubuntu-latest

parameters:
  - name: name
    displayName: Enter name
    type: string
  - name: redirect_uris
    displayName: Enter redirect_uris name
    type: string
  - name: CI
    displayName: Enter CI name
    type: string
  - name: identifier_uris
    displayName: Enter identifier name
    type: string
  - name: application_name
    displayName: Enter appName name
    type: string
  - name: aad_group
    displayName: Enter aad_group name
    type: string
stages:
  - stage: tfinstallvalidate
    
    jobs:
      - job: validate
        continueOnError: false
        steps: 
        - checkout: self
          persistCredentials: true
        - task: TerraformInstaller@1
          displayName: tfinstall
          inputs:
            terraformVersion: 'latest'
        - script: |
             pwd
             ls -lart
        - script: |
             echo Add other tasks to build, test, and deploy your project.
             echo ${{parameters.name}} "succesfully triggered this build from a REST API call"
             echo "application_name=${{parameters.application_name}}" >> ${{parameters.file}}
             echo "identifier_uris=${{parameters.identifier_uris}}" >> ${{parameters.file}}
             echo "aad_group=${{parameters.aad_group}}" >> ${{parameters.file}}
             ls -lart
             cat ${{parameters.file}}
             git add -A
             git commit -m "deployment $(Build.BuildNumber)"
             git push --set-upstream origin HEAD:main
          displayName: 'Run a multi-line script'
